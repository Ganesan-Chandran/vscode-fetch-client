{
  "name": "fetch-client",
  "displayName": "Fetch Client",
  "description": "Rest API Client for VS Code which is used to test your API's within VS Code.",
  "version": "1.8.0",
  "publisher": "GanesanChandran",
  "author": {
    "name": "Ganesan Chandran <https://ganesan-chandran.github.io/>"
  },
  "engines": {
    "vscode": "^1.75.0"
  },
  "icon": "icons/fetch-client.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Ganesan-Chandran/vscode-fetch-client.git"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "Snippets",
    "Testing"
  ],
  "keywords": [
    "fetch client",
    "api client",
    "rest client",
    "http client",
    "api",
    "rest",
    "postman",
    "graphql",
    "testing",
    "api testing",
    "rest testing",
    "http",
    "rest api",
    "fetchclient",
    "apiclient",
    "restclient",
    "httpclient",
    "apitesting",
    "resttesting",
    "restapi"
  ],
  "license": "MIT",
  "homepage": "https://github.com/Ganesan-Chandran/vscode-fetch-client",
  "bugs": {
    "url": "https://github.com/Ganesan-Chandran/vscode-fetch-client/issues"
  },
  "activationEvents": [
    "onCommand:fetch-client.newRequest",
    "onCommand:fetch-client.addToCol",
    "onView:fetch-client.sideBar",
    "onCommand:fetch-client.newVar",
    "onCommand:fetch-client.manageCookies",
    "onCommand:fetch-client.openSettings",
    "onCommand:fetch-client.openErrorLog",
    "onCommand:fetch-client.curlRequest",
    "onCommand:fetch-client.bulkExport",
    "onCommand:fetch-client.autoRequest",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "keybindings": [
      {
        "command": "workbench.view.extension.fetch-client",
        "key": "ctrl+alt+n",
        "mac": "cmd+shift+n",
        "linux": "ctrl+alt+n"
      }
    ],
    "commands": [
      {
        "command": "fetch-client.newRequest",
        "title": "Fetch Client : New Request"
      },
      {
        "command": "fetch-client.manageCookies",
        "title": "üåê Manage Cookies",
        "category": "Fetch Client"
      },
      {
        "command": "fetch-client.openSettings",
        "title": "‚öôÔ∏è Fetch Client Settings",
        "category": "Fetch Client"
      },
      {
        "command": "fetch-client.openErrorLog",
        "title": "üîç View Error Log",
        "category": "Fetch Client"
      },
      {
        "command": "fetch-client.reloadData",
        "title": "Reload",
        "icon": "$(refresh)",
        "category": "Fetch Client"
      },
      {
        "command": "fetch-client.documentation",
        "title": "üìÑ Documentation",
        "category": "Fetch Client"
      },
      {
        "command": "fetch-client.raiseRequest",
        "title": "‚úÖ Raise Requests/Issues",
        "category": "Fetch Client"
      },
      {
        "command": "fetch-client.feedback",
        "title": "‚≠ê Write a Review",
        "category": "Fetch Client"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "fetch-client",
          "title": "Fetch Client",
          "icon": "icons/fetch-client.svg"
        }
      ]
    },
    "views": {
      "fetch-client": [
        {
          "type": "webview",
          "id": "fetch-client.sideBar",
          "name": "Fetch Client",
          "contextualTitle": "Fetch Client"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "fetch-client.request",
        "contents": "[New Request](command:fetch-client.newRequest)"
      }
    ],
    "configuration": [
      {
        "type": "object",
        "title": "Fetch Client",
        "properties": {
          "fetch-client.layout": {
            "type": "string",
            "default": "Horizontal Split",
            "enum": [
              "Vertical Split",
              "Horizontal Split"
            ],
            "scope": "resource",
            "order": 1,
            "markdownDescription": "Select the layout of Fetch Client"
          },
          "fetch-client.horizontalLayout": {
            "type": "string",
            "default": "Accordion Style",
            "enum": [
              "Split Style",
              "Accordion Style"
            ],
            "scope": "resource",
            "order": 2,
            "markdownDescription": "Select the style of horizontal split"
          },
          "fetch-client.SSLCheck": {
            "type": "boolean",
            "default": true,
            "order": 3,
            "scope": "resource",
            "markdownDescription": "Enable `Strict SSL Check` for API Request"
          },
          "fetch-client.historyLimit": {
            "type": "string",
            "default": "25",
            "enum": [
              "All",
              "25",
              "50",
              "75",
              "100"
            ],
            "scope": "resource",
            "order": 4,
            "markdownDescription": "Select the number of items to be displayed in the history"
          },
          "fetch-client.timeOut": {
            "type": "number",
            "default": 120000,
            "scope": "resource",
            "order": 5,
            "markdownDescription": "Select the request timeout (`in milliseconds`). 0 means no timeout"
          },
          "fetch-client.defaultProtocol": {
            "type": "string",
            "default": "http",
            "enum": [
              "http",
              "https"
            ],
            "scope": "resource",
            "order": 6,
            "markdownDescription": "Select which protocol to be added with url (if url has no protocol)."
          },
          "fetch-client.headersCaseSensitive": {
            "type": "boolean",
            "default": true,
            "scope": "resource",
            "order": 7,
            "markdownDescription": "By Default headers will send `same as in request`. If it is disabled, header will send in `lowercase`."
          },
          "fetch-client.separateRequestTab": {
            "type": "boolean",
            "default": false,
            "scope": "resource",
            "order": 8,
            "markdownDescription": "By Default request will be open in `same tab`. If it is enabled, request will be open in `separate tab`."
          },
          "fetch-client.log": {
            "type": "boolean",
            "default": false,
            "scope": "resource",
            "order": 9,
            "markdownDescription": "By Default `request details` will be logged. If it is enabled, both `request and response` details will be logged."
          },
          "fetch-client.runMainRequest": {
            "type": "boolean",
            "default": false,
            "scope": "resource",
            "order": 10,
            "markdownDescription": "By Default `main request will run` even if pre-request(s)/pre-condition(s) are getting failed. If it is disabled, `main request won't run` if any pre-request/pre-condition are failed."
          },
          "fetch-client.responseLimit": {
            "type": "number",
            "enum": [
              1,
              2,
              5,
              10,
              25,
              20
            ],
            "default": 5,
            "scope": "resource",
            "markdownDescription": "Response Limit in MB, Default value is 5MB",
            "order": 11
          },
          "fetch-client.saveToWorkspace": {
            "type": "boolean",
            "default": false,
            "scope": "resource",
            "markdownDescription": "Save all the data into the `current workspace` location",
            "order": 12
          },
          "fetch-client.workspacePath": {
            "type": "string",
            "default": "",
            "scope": "resource",
            "markdownDescription": "Workspace location (**`Do not edit manually. Configuration will be done automatically. Manual editing may lead to data loss.`**)",
            "order": 13
          },
          "fetch-client.encryptedVariables": {
            "type": "boolean",
            "default": false,
            "scope": "resource",
            "markdownDescription": "Encrypt the environment variable values in the local store.",
            "order": 14
          },
          "fetch-client.encryptedVariablesInExport": {
            "type": "boolean",
            "default": true,
            "scope": "resource",
            "markdownDescription": "Encrypt the environment variable values during export.",
            "order": 15
          }
        }
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "fetch-client.manageCookies",
          "when": "view == fetch-client.sideBar",
          "group": "group1@1"
        },
        {
          "command": "fetch-client.openErrorLog",
          "when": "false",
          "group": "group2@1"
        },
        {
          "command": "fetch-client.openSettings",
          "when": "view == fetch-client.sideBar",
          "group": "group2@2"
        },
        {
          "command": "fetch-client.reloadData",
          "when": "view == fetch-client.sideBar",
          "group": "navigation"
        },
        {
          "command": "fetch-client.documentation",
          "group": "group2@3",
          "when": "view == fetch-client.sideBar"
        },
        {
          "command": "fetch-client.raiseRequest",
          "group": "group3@1",
          "when": "view == fetch-client.sideBar"
        },
        {
          "command": "fetch-client.feedback",
          "group": "group3@2",
          "when": "view == fetch-client.sideBar"
        }
      ],
      "commandPalette": [
        {
          "command": "fetch-client.manageCookies",
          "when": "false"
        },
        {
          "command": "fetch-client.openSettings",
          "when": "false"
        },
        {
          "command": "fetch-client.openErrorLog",
          "when": "false"
        },
        {
          "command": "fetch-client.reloadData",
          "when": "false"
        },
        {
          "command": "fetch-client.documentation",
          "when": "false"
        },
        {
          "command": "fetch-client.raiseRequest",
          "when": "false"
        },
        {
          "command": "fetch-client.feedback",
          "when": "false"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack --mode development --progress --watch",
    "watch": "webpack --mode development --progress --watch",
    "package": "webpack --mode production",
    "compile-tests": "tsc -p ./",
    "watch-tests": "tsc -watch -p ./",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint-check": "editorconfig-checker",
    "md-lint": "markdownlint *.md ./**/*.md ./**/**/*.md --ignore node_modules --ignore CHANGELOG.md",
    "md-lint-fix": "markdownlint *.md ./**/*.md ./**/**/*.md --ignore node_modules --ignore CHANGELOG.md --fix",
    "md-spellcheck": "spellchecker -f *.md ./**/*.md -d dictionary.txt --language en-GB",
    "pre-commit": "npm run lint-check && npm run md-lint && npm run md-spellcheck",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^5.16.2",
    "@testing-library/react": "^12.1.4",
    "@testing-library/user-event": "^13.5.0",
    "@types/aws4": "^1.11.2",
    "@types/draft-js": "^0.11.9",
    "@types/glob": "^7.2.0",
    "@types/httpsnippet": "^1.23.1",
    "@types/jest": "^27.5.2",
    "@types/lokijs": "^1.5.7",
    "@types/markdown-it": "^12.2.3",
    "@types/mocha": "^9.1.1",
    "@types/node": "^16.11.26",
    "@types/react": "^17.0.40",
    "@types/react-dom": "^17.0.13",
    "@types/react-redux": "^7.1.23",
    "@types/uuid": "^8.3.4",
    "@types/vscode": "^1.65.0",
    "@types/yargs-parser": "^21.0.0",
    "@typescript-eslint/eslint-plugin": "^5.9.1",
    "@typescript-eslint/parser": "^5.9.1",
    "@vscode/test-electron": "^2.0.3",
    "buffer": "^6.0.3",
    "cross-env": "^7.0.3",
    "draft-js": "^0.11.7",
    "editorconfig-checker": "^5.1.8",
    "eslint": "^8.57.0",
    "fast-xml-parser": "^4.0.7",
    "glob": "^7.2.0",
    "httpsnippet": "^2.0.0",
    "jest": "^29.7.0",
    "lokijs": "^1.5.12",
    "markdownlint": "^0.34.0",
    "markdownlint-cli": "^0.41.0",
    "mini-css-extract-plugin": "^2.6.0",
    "mocha": "^9.2.2",
    "monaco-editor": "^0.33.0",
    "monaco-editor-webpack-plugin": "^7.0.1",
    "path-browserify": "^1.0.1",
    "process": "^0.11.10",
    "react-error-boundary": "^3.1.4",
    "react-json-view": "^1.21.3",
    "react-scripts": "^5.0.0",
    "react-simple-wysiwyg": "^2.0.2",
    "react-split": "^2.0.14",
    "redux": "^4.1.2",
    "redux-thunk": "^2.4.1",
    "source-map-loader": "^3.0.1",
    "spellchecker-cli": "^6.2.0",
    "stream": "0.0.2",
    "stream-browserify": "^3.0.0",
    "terser-webpack-plugin": "^5.3.1",
    "ts-loader": "^9.2.8",
    "typescript": "^4.6.2",
    "url": "^0.11.0",
    "url-loader": "^4.1.1",
    "util": "^0.12.4",
    "web-vitals": "^2.1.4",
    "webpack": "^5.66.0",
    "webpack-bundle-analyzer": "^4.5.0",
    "webpack-cli": "^4.9.2"
  },
  "dependencies": {
    "@ganesan-chandran/fetch-client-crypto": "^1.0.1",
    "aws4": "^1.11.0",
    "axios": "^0.26.1",
    "cron": "^3.1.7",
    "form-data": "^4.0.0",
    "moment-mini": "^2.29.4",
    "quicktype-core": "^6.1.0",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-redux": "^7.2.6",
    "uuid": "^8.3.2",
    "yargs-parser": "^21.0.1"
  }
}
